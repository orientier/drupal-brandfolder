<?php

/**
 * @file
 * Contains brandfolder.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Brandfolder\Brandfolder;

/**
 * Brandfolder helper function.
 *
 * Helper function to get a Brandfolder object that can be used to interact with
 * the Brandfolder API.
 *
 * @param string|null $api_key
 *   If provided, an API key to use when connecting to Brandfolder. If not
 *   provided, the default API key set in the module configuration will be used.
 *
 * @return bool|object
 *   A \Brandfolder\Brandfolder object for interacting with the Brandfolder SDK,
 *   or FALSE on failure.
 */
function brandfolder_api(string $api_key = NULL) {
  // Get the default API key from module configuration if none is explicitly
  // provided.
  if (is_null($api_key)) {
    $api_key = \Drupal::config('brandfolder.settings')->get('api_key');
  }
  if (empty($api_key)) {
    return FALSE;
  }

  // Set Brandfolder and collection based on module config if present (NULL
  // otherwise).
  $default_brandfolder = \Drupal::config('brandfolder.settings')->get('default_brandfolder');
  $bf = new Brandfolder($api_key, $default_brandfolder);

  $default_collection = \Drupal::config('brandfolder.settings')->get('default_collection');
  if ($default_collection) {
    // @todo: getter/setter methods.
    $bf->default_collection_id = $default_collection;
  }

  return $bf;
}

/**
 * Implements hook_help().
 */
function brandfolder_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the Brandfolder module.
    case 'help.page.brandfolder':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Allows Drupal developers to easily integrate with a Brandfolder account.') . '</p>';

      return $output;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function brandfolder_form_field_config_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // If this is a config form for a file-esque field using the Brandfolder
  // URI scheme, disable the file upload directory setting.
  $route_params = \Drupal::routeMatch()->getParameters();
  if ($field_config = $route_params->get('field_config', FALSE)) {
    if ($field_storage = $field_config->getFieldStorageDefinition()) {
      if ($field_storage->getSetting('uri_scheme') == 'bf') {
        $form['settings']['file_directory']['#default_value'] = '';
        $form['settings']['file_directory']['#access'] = FALSE;
      }
    }
  }
}
